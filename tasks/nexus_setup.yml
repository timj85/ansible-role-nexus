---
- name: Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/etc"
    owner: root
    group: root
    mode: '0644'
    recurse: true
  when: chown_config_first_time.changed

- name: Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
    recurse: false
  loop: "{{ nexus_app_dir_settings_dirs }}"

- name: Create directory to hold current groovy scripts for reference
  file:
    path: "{{ nexus_data_dir }}/groovy-raw-scripts/current"
    state: directory
    owner: root
    group: root

- name: Install plugins from remote source
  get_url:
    url: "{{ item }}"
    dest: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/deploy/"
  with_items: "{{ nexus_plugin_urls }}"

- name: Access scripts API endpoint with defined admin password
  uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}\
      {{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}"
    method: 'HEAD'
    user: 'admin'
    password: "{{ nexus_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
    validate_certs: no
    timeout: 120
  register: nexus_api_head_with_defined_password
  retries: 5
  delay: 15
  until: nexus_api_head_with_defined_password.status is defined
  # ignore_errors: yes  # Для диагностики

- name: Register defined admin password for next operations
  set_fact:
    current_nexus_admin_password: "{{ nexus_admin_password }}"
  when: nexus_api_head_with_defined_password.status == 200
  no_log: true

- name: Check if admin.password file exists
  stat:
    path: "{{ nexus_data_dir }}/admin.password"
  register: admin_password_file

- name: Get generated admin password from file
  when:
    - admin_password_file.stat.exists
    - nexus_api_head_with_defined_password.status == 401
    - nexus_version is version_compare('3.17.0', '>=')
  block:
    - name: Slurp content of remote generated password file
      slurp:
        src: "{{ nexus_data_dir }}/admin.password"
      register: _slurpedpass

    - name: Set default password from slurped content
      set_fact:
        nexus_default_admin_password: "{{ _slurpedpass.content | b64decode }}"

- name: Access scripts API endpoint with default admin password
  uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}\
      {{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}"
    method: HEAD
    user: admin
    password: "{{ nexus_default_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
    validate_certs: false
  register: nexus_api_head_with_default_password
  when: nexus_api_head_with_defined_password.status == 401

- name: Register default admin password for next operations
  set_fact:
    current_nexus_admin_password: "{{ nexus_default_admin_password }}"
  when: (nexus_api_head_with_default_password.status | default(false)) == 200

- name: Ensure current Nexus password is known
  fail:
    msg: >-
      Failed to determine current Nexus password
      (it is neither the default/generated nor the defined password).
      If you are trying to change nexus_admin_password after first
      install, please set `-e nexus_default_admin_password=oldPassword`
      on the ansible-playbook command line.
  when: current_nexus_admin_password is not defined

- name: Force (re-)registration of groovy scripts (purge reference dir)
  file:
    path: "{{ nexus_data_dir }}/groovy-raw-scripts"
    state: absent
  when: nexus_force_groovy_scripts_registration | default(false)

- name: Create directories to hold current groovy scripts for reference
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
  loop:
    - "{{ nexus_data_dir }}/groovy-raw-scripts/current"
    - "{{ nexus_data_dir }}/groovy-raw-scripts/new"

- name: Install rsync (RedHat/CentOS)
  ansible.builtin.yum:
    name: rsync
    state: present
  when: ansible_os_family == 'RedHat'

- name: Upload new scripts
  synchronize:
    archive: false
    checksum: true
    recursive: true
    delete: true
    mode: push
    use_ssh_args: true
    src: "{{ role_path }}/files/groovy/"
    dest: "{{ nexus_data_dir }}/groovy-raw-scripts/new/"

- block:
    - name: Sync new scripts to old and get differences
      shell: >
        set -o pipefail &&
        rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/
        | cut -d" " -f 2 | sed "s/\.groovy//g"
      register: nexus_groovy_files_changed
      check_mode: false
      changed_when: false
      # simple check on changed files kept on host
      # skip ansible lint (we don't want to use synchronize module for this)
      args:
        executable: /bin/bash
  rescue:
    - name: Fail with information on rsync error
      fail:
        msg: >-
          A task involving running rsync on the host just failed, most probably because rsync is not installed.
          Please make sure rsync is installed on your host or double check the above error and try again.

- name: Declare new or changed groovy scripts in nexus
  include_tasks: declare_script_each.yml
  loop: "{{ nexus_groovy_files_changed.stdout_lines }}"

- name: Change admin password if we are still using default
  block:
    - include_tasks: call_script.yml
      vars:
        script_name: update_admin_password
        args:
          new_password: "{{ nexus_admin_password }}"

    - name: Admin password changed
      set_fact:
        current_nexus_admin_password: "{{ nexus_admin_password }}"
      no_log: true

    - name: Clear generated password file from install
      file:
        path: "{{ nexus_data_dir }}/admin.password"
        state: absent

  when: (nexus_api_head_with_default_password.status | default(false)) == 200
